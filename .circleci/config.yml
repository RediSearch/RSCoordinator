version: 2
defaults:
  ci_steps: &ci_steps
    - checkout
    - run:
        name: Python Dependencies
        command: >-
          pip install --upgrade setuptools
          git+https://github.com/RedisLabsModules/RLTest.git@master
          git+https://github.com/mnunberg/RAMP@print_version;pip install redis-py-cluster==1.3.6
  
    - run:
        name: Submodule checkout
        command: >-
          if [ ! -e src/dep/RediSearch/CMakeLists.txt ]; then
            git submodule init && git submodule update;
          fi

    - run:
        name: Configuration & UV Build
        command: ./.circleci/configure.sh
    
    - run:
        name: Main Build
        command: ./.circleci/build.sh
    - run:
        name: Test
        command: ./.circleci/test.sh
    - run:
        name: Package
        command: ./.circleci/package.sh && ./.circleci/package-light.sh

    - persist_to_workspace:
        root: /workspace
        paths:
          - 'snapshot'
          - 'release'

  default_jobs: &default_jobs
    - centos
    - ubuntu
    - trusty

jobs:
  ubuntu:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    environment:
      - BUILD_DIR: build-debian
      - DIST_SUFFIX: -ubuntu16.04

    steps: *ci_steps

  trusty:
    docker:
      - image: 'redislabsmodules/rmbuildertrusty:latest'
    environment:
      - BUILD_DIR: build-trusty
      - DIST_SUFFIX: -ubuntu14.04
    steps: *ci_steps
  
  centos:
    docker:
      - image: 'redislabsmodules/rmbuildercentos:latest'
    environment:
      - BUILD_DIR: build-el
      - DIST_SUFFIX: -rhel7

    steps: *ci_steps

  deploy_snapshots:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy Snapshots to S3
          command: >-
            for f in /workspace/snapshot/*.zip; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/snapshots/ --acl public-read;
            done

  deploy_release:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy Releases to S3
          command: >-
            for f in /workspace/release/*.zip; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/ --acl public-read;
            done
            
  run_automation:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - run:
          name: Run QA Automation
          command: >-
            apt-get update &&
            apt-get -y install curl &&
            curl -k -u $QA_AUTOMATION_USERNAME:$QA_AUTOMATION_PASS -X POST
            -H "Content-Type: application/json"
            -d '{"service_id":"single_module_test_cycle_sanity_and_extended", "name":"redisearch automation-testing", "properties":{"sut_version":"5.4.14", "email_recipients":"search@redislabs.com", "sut_environments":[], "tools_environment":{}, "module_name": "RediSearchEnterprise", "module_version":"master", "cycle_environments_setup":[{"teardown":true, "name":"xenial-amd64-aws", "concurrency":1}, {"teardown":true, "name":"bionic-amd64-aws", "concurrency":1}]}}'
            https://qa-automation-center.redislabs.com/processes                      

workflows:
  version: 2

  default_flow:
    jobs:
      - ubuntu:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - centos:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - trusty:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - deploy_snapshots:
          requires: *default_jobs
          filters:
            branches:
              only:
                - master
                - circle-sandbox
      - deploy_release:
          requires: *default_jobs
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9].*/
      - run_automation:
          requires: *deploy_release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9].*/
