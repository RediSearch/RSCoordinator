version: 2.1

commands:
  setup-automation:
    steps:
      - run:
          name: Setup automation and install dependencies
          command: |
            (mkdir -p deps; cd deps; git clone https://github.com/RedisLabsModules/readies.git)
            FORCE=1 ./deps/readies/bin/getpy2
            ./system-setup.py

  build-steps:
    parameters:
      redis_version:
        type: string
        default: "6"
      getredis_params:
        type: string
        default: ""
      search-from-int:
        type: boolean
        default: false
    steps:
      - checkout
      - setup-automation
      - run:
          name: Install Redis
          command: python2 ./deps/readies/bin/getredis -v <<parameters.redis_version>> --force <<parameters.getredis_params>>
      - run:
          name: Submodule checkout
          command: |
            if [[ ! -e src/dep/RediSearch/CMakeLists.txt ]]; then
              git submodule update --init --recursive
            fi
            if [[ <<parameters.search-from-int>> == true ]]; then
              pushd src/dep/RediSearch
              git checkout 1.6
              git pull --recurse-submodules
              popd > /dev/null
            fi
      - run:
          name: Configuration & UV Build
          command: ./.circleci/configure.sh
      - run:
          name: Main Build
          command: ./.circleci/build.sh
      - run:
          name: Test
          command: ./.circleci/test.sh
      - run:
          name: Package
          command: |
            ./.circleci/package.sh
            ./.circleci/package-light.sh
      - persist_to_workspace:
          root: /workspace
          paths:
            - 'snapshot'
            - 'release'

jobs:
  bionic:
    docker:
      - image: redisfab/rmbuilder:6.0.7-x64-bionic
    environment:
      - BUILD_DIR: build-bionic
      - DIST_SUFFIX: -ubuntu18.04
    parameters:
      search-from-int:
        type: boolean
        default: false
      redis_version:
        type: string
        default: "6"
    steps:
      - build-steps:
          search-from-int: <<parameters.search-from-int>>

  xenial:
    docker:
      - image: redisfab/rmbuilder:6.0.7-x64-xenial
    environment:
      - BUILD_DIR: build-xenial
      - DIST_SUFFIX: -ubuntu16.04
    parameters:
      redis_version:
        type: string
        default: "6"
    steps:
      - build-steps

  trusty:
    docker:
      - image: redisfab/rmbuilder:6.0.7-x64-trusty
    environment:
      - BUILD_DIR: build-trusty
      - DIST_SUFFIX: -ubuntu14.04
    parameters:
      redis_version:
        type: string
        default: "6"
    steps:
      - build-steps
  
  centos7:
    docker:
      - image: redisfab/rmbuilder:6.0.7-x64-centos7
    environment:
      - BUILD_DIR: build-el
      - DIST_SUFFIX: -rhel7
    parameters:
      search-from-int:
        type: boolean
        default: false
      redis_version:
        type: string
        default: "6"
    steps:
      - build-steps:
          search-from-int: <<parameters.search-from-int>>

  deploy-snapshots:
    docker:
      - image: redisfab/rmbuilder:6.0.7-x64-buster
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy Snapshots to S3
          command: |
            cd /workspace/snapshots
            for f in `find . -name "*.zip" -or -name "*.tgz"`; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/snapshots/ --acl public-read
            done

  deploy-release:
    docker:
      - image: redisfab/rmbuilder:6.0.7-x64-buster
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy Releases to S3
          command: |
            cd /workspace/release
            for f in `find . -name "*.zip" -or -name "*.tgz"`; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/ --acl public-read
            done

  release-automation:
    docker:
      - image: redisfab/rmbuilder:6.0.7-x64-buster
    steps:
      - checkout
      - setup-automation
      - run:
          name: Run QA Automation
          command: MODULE_VERSION=$CIRCLE_TAG VERBOSE=1 TEST=release ./tests/qa/run
      - run:
          name: Run QA Automation (RediSearch Light)
          command: MODULE_VERSION=$CIRCLE_TAG VERBOSE=1 TEST=release LIGHT=1 ./tests/qa/run

  nightly-automation:
    docker:
      - image: redisfab/rmbuilder:6.0.7-x64-buster
    steps:
      - checkout
      - setup-automation
      - run:
          name: Run QA Automation
          command: MODULE_VERSION=$CIRCLE_BRANCH VERBOSE=1 TEST=nightly QUICK=1 ./tests/qa/run
      - run:
          name: Run QA Automation (RediSearch Light)
          command: MODULE_VERSION=$CIRCLE_BRANCH VERBOSE=1 TEST=nightly QUICK=1 LIGHT=1 ./tests/qa/run


on-any-branch: &on-any-branch
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

never: &never
  filters:
    branches:
      ignore: /.*/
    tags:
      ignore: /.*/

on-master: &on-master
  filters:
    branches:
      only: master
    tags:
      ignore: /.*/

on-integ-branch: &on-integ-branch
  filters:
    branches:
      only:
        - master
        - /^\d+\.\d+.*$/
    tags:
      ignore: /.*/

not-on-integ-branch: &not-on-integ-branch
  filters:
    branches:
      ignore:
        - master
        - /^\d+\.\d+.*$/
    tags:
      ignore: /.*/

on-version-tags: &on-version-tags
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9].*/

on-integ-and-version-tags: &on-integ-and-version-tags
  filters:
    branches:
      only:
        - master
        - /^\d+\.\d+.*$/
    tags:
      only: /^v[0-9].*/


after-platform-builds: &after-platform-builds
  requires:
    - centos7
    - bionic
    - xenial
#    - trusty
 

workflows:
  version: 2
  default_flow:
    jobs:
      - bionic:
          name: bionic-with-redis-<< matrix.redis_version >>
          <<: *on-any-branch
          matrix:
            parameters:
              redis_version: ["5.0", "6.0", "6.2"]
      - bionic:
          name: latest-search-bionic-with-redis-<< matrix.redis_version >>
          <<: *on-any-branch
          matrix:
            parameters:
              search-from-int: true
              redis_version: ["5.0", "6.0", "6.2"]
      - xenial:
          <<: *on-any-branch
      - centos7:
          <<: *on-any-branch
#      - trusty:
#          <<: *on-any-branch
      - deploy-snapshots:
          context: common
          <<: *after-platform-builds
          <<: *on-integ-branch
      - deploy-release:
          context: common
          <<: *after-platform-builds
          <<: *on-version-tags
      - release-automation:
          context: common
          requires:
            - deploy-release
          <<: *on-version-tags

  nightly:
    triggers:
      - schedule:
          cron: "07 20 * * *"
          filters:
            branches:
              only: master
    jobs:
      - bionic:
          name: nightly-bionic-with-redis-<< matrix.redis_version >>
          search-from-int: true
          matrix:
            parameters:
              redis_version: ["5.0", "6.0", "6.2"]
      - centos7:
          name: nightly-centos7-with-redis-<< matrix.redis_version >>
          search-from-int: true
          matrix:
            parameters:
              redis_version: ["5.0", "6.0", "6.2"]
      - nightly-automation:
          context: common
