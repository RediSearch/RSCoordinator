#!/bin/bash

HERE="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
ROOT=$HERE/../..

if [[ $1 == --help || $1 == help ]]; then
	cat <<-END
		Invoke QA Automation tests

		[ARGVARS...] run [--help|help]

		Argument variables:
		QA_AUTOMATION_USERNAME=name   QA automation (Opereto) username
		QA_AUTOMATION_PASS=pass       QA automation (Opereto) password
		TEST=name                     Name of .json parameters file
		MODULE_VERSION=ver            Module version to test. Default: master
		LIGHT=1                       Test RediSearch Light

		Other configuration:
		RS_VERSION file includes Redis Enterprive version for release tests.

	END
	exit 0
fi

if [[ -z $QA_AUTOMATION_USERNAME ]]; then
	echo "Variable QA_AUTOMATION_USERNAME is undefined." >&2
	exit 1
fi
if [[ -z $QA_AUTOMATION_PASS ]]; then
	echo "Variable QA_AUTOMATION_PASS is undefined." >&2
	exit 1
fi

export TEST=${TEST:-release}
if [[ ! -f $TEST.json ]]; then

fi

export RS_VERSION=$(cat $HERE/RS_VERSION)

if [[ -z $MODULE_VERSION ]]; then
	export MODULE_VERSION=master
else
	export MODULE_VERSION=$(echo "$MODULE_VERSION" | sed  's/^v\(.*\)/\1/')
fi

if [[ $LIGHT == 1 ]]; then
	RS_MODULE=RedisearchLight
else
	RS_MODULE=RediSearchEnterprise
fi

results() {
	echo "$JSON" | jq "$1" | cut -d\" -f2
}

cd $HERE

json_in=$(mktemp /tmp/$TEST.json.XXXX)
$ROOT/deps/readies/bin/xtx -e RS_MODULE -e MODULE_VERSION -e RS_VERSION $TEST.json > $json_in
[[ $VERBOSE == 1 ]] && cat $json_in

JSON=$(curl -sk \
	-u "$QA_AUTOMATION_USERNAME":"$QA_AUTOMATION_PASS" \
	-X POST -H "Content-Type: application/json" \
	-d @$json_in \
	https://qa-automation-center.redislabs.com/processes 2>&1)
rc=$?
rm $json_in
status=$(results .status)
if [[ $rc == 0 && $status == success ]]; then
	id=$(results .data[0])
	echo "Tests running."
	echo "Results: https://qa-automation-center.redislabs.com/ui#dashboard/flow/$id"
	exit 0
else
	err=$(results .message)
	echo "Error: $err"
	exit 1
fi
