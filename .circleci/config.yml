version: 2.1

defaults:
  ci_steps: &ci_steps
    - checkout
    - run:
        name: Setup automation
        command: |
          (mkdir -p deps; cd deps; git clone https://github.com/RedisLabsModules/readies.git)
          PIP=1 FORCE=1 ./deps/readies/bin/getpy2
          ./system-setup.py
#    - run:
#        name: Setup Python & Dependencies
#        command: |
#          PIP=1 FORCE=1 ./deps/readies/bin/getpy2
#          python2 -m pip install --upgrade setuptools
#          python2 -m pip uninstall -y -q redis redis-py-cluster ramp-packer RLTest rmtest semantic-version
#          python2 -m pip install --no-cache-dir git+https://github.com/Grokzen/redis-py-cluster.git@master
#          python2 -m pip install --no-cache-dir git+https://github.com/RedisLabsModules/RLTest.git@master
#          python2 -m pip install --no-cache-dir git+https://github.com/RedisLabs/RAMP@master
    - run:
        name: Install Redis
        command: python2 ./deps/readies/bin/getredis -v 6
    - run:
        name: Submodule checkout
        command: |
          if [[ ! -e src/dep/RediSearch/CMakeLists.txt ]]; then
            git submodule update --init --recursive
          fi

    - run:
        name: Configuration & UV Build
        command: ./.circleci/configure.sh
    
    - run:
        name: Main Build
        command: ./.circleci/build.sh
    - run:
        name: Test
        command: ./.circleci/test.sh
    - run:
        name: Package
        command: ./.circleci/package.sh && ./.circleci/package-light.sh

    - persist_to_workspace:
        root: /workspace
        paths:
          - snapshot
          - release

  default_jobs: &default_jobs
    - centos7
    - xenial
    - trusty

jobs:
  xenial:
    docker:
      - image: redisfab/rmbuilder:6.0.5-x64-xenial
    environment:
      - BUILD_DIR: build-xenial
      - DIST_SUFFIX: -ubuntu16.04
    steps: *ci_steps

  trusty:
    docker:
      - image: redisfab/rmbuilder:6.0.5-x64-trusty
    environment:
      - BUILD_DIR: build-trusty
      - DIST_SUFFIX: -ubuntu14.04
    steps: *ci_steps
  
  centos7:
    docker:
      - image: redisfab/rmbuilder:6.0.5-x64-centos7
    environment:
      - BUILD_DIR: build-el
      - DIST_SUFFIX: -rhel7
    steps: *ci_steps

  deploy_snapshots:
    docker:
      - image: redisfab/rmbuilder:6.0.5-x64-buster
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy Snapshots to S3
          command: |
            for f in /workspace/snapshot/*.zip; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/snapshots/ --acl public-read
            done

  deploy_release:
    docker:
      - image: redisfab/rmbuilder:6.0.5-x64-buster
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy Releases to S3
          command: |
            for f in /workspace/release/*.zip; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/ --acl public-read
            done
            
  run_automation:
    docker:
      - image: redisfab/rmbuilder:6.0.5-x64-buster
    steps:
      - run:
          name: Run QA Automation
          command: >-
            apt-get update &&
            apt-get -y install curl &&
            curl -k -u $QA_AUTOMATION_USERNAME:$QA_AUTOMATION_PASS -X POST
            -H "Content-Type: application/json"
            -d '{"service_id":"modules_multiple_rs_versions_cycle", "name":"redisearch automation-testing", "properties":{"sut_version":"5.4.4-7", "email_recipients":"s5i1u4h5a8c8w2d7@redislabs.slack.com", "sut_environments":[], "tools_environment":{}, "module_name": "ft", "modules_version":"$CIRCLE_TAG", "cycle_environments_setup":[{"teardown":true, "name":"trusty-amd64-aws", "concurrency":4}, {"teardown":true, "name":"xenial-amd64-aws", "concurrency":4}, {"teardown":true, "name":"rhel7.5-x86_64-aws", "concurrency":4}]}}'
            https://qa-automation-center.redislabs.com/processes


on-any-branch: &on-any-branch
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

never: &never
  filters:
    branches:
      ignore: /.*/
    tags:
      ignore: /.*/

on-master: &on-master
  filters:
    branches:
      only: master

on-version-tags: &on-version-tags
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9].*/

on-master-and-version-tags: &on-master-and-version-tags
  filters:
    branches:
      only:
        - master
    tags:
      only: /^v[0-9].*/


workflows:
  version: 2

  default_flow:
    jobs:
      - xenial:
          <<: *on-any-branch
      - centos7:
          <<: *on-any-branch
      - trusty:
          <<: *on-any-branch
      - deploy_snapshots:
          requires: *default_jobs
          <<: *on-master
      - deploy_release:
          requires: *default_jobs
          <<: *on-version-tags
      - run_automation:
          requires:
            - deploy_release

      
